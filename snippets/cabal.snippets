snippet executable
Name:            koellner-phonetic
version:         0.0
synopsis:        "map German words to code representing pronunciation"
category: Text, Natural Language Processing
maintainer:      "Marc Weber"
description:     "German soundex like code, see Wikipedia http://de.wikipedia.org/wiki/K%C3%B6lner_Phonetik"
build-type:      Simple
license:         BSD3
cabal-version: >= 1.10

source-repository head
  type: git
  location: http://github.com/MarcWeber/...

-- TODO drop HUnit after fixing hack-nix
Library
  default-language: Haskell2010
  build-depends:
    base >= 2 && < 5,
    HUnit
  ghc-options   : -Wall

-- executable "MyTest"
--   build-depends:
--     base >= 2,
--     HUnit
--   main-is:        Main.hs
--   hs-source-dirs: test, src

Test-Suite test-koellner-phonetic
  default-language: Haskell2010
  type: exitcode-stdio-1.0
  hs-source-dirs: test, src
  main-is: Main.hs
  build-depends: base, HUnit


snippet executable_only
	executable     testSimple
	  main-is:        testSimple.hs
	  if !(flag(BuildTestSimple))
	    buildable: False
	  hs-source-dirs: test, src
	  build-depends:   haskell98
	                  , base
	                  , HList
	                  , HaXml >= 1.19
	                  , filepath
	                  , mtl
	                  , pretty
	                  , containers
	                  , template-haskell
	  extensions: CPP
	  include-dirs: include
	  if flag(WeakValidation)
	    cpp-options: -DWEAK_VALIDATION
	    extensions: OverlappingInstances
	  else
	    extenions: OverlappingInstances
snippet executable "executable"


snippet executable_only "executable_only"
executable     testSimple
  main-is:        testSimple.hs
  if !(flag(BuildTestSimple))
    buildable: False
  hs-source-dirs: test, src
  build-depends:   haskell98
                  , base
                  , HList
                  , HaXml >= 1.19
                  , filepath
                  , mtl
                  , pretty
                  , containers
                  , template-haskell
  extensions: CPP
  include-dirs: include
  if flag(WeakValidation)
    cpp-options: -DWEAK_VALIDATION
    extensions: OverlappingInstances
  else
    extenions: OverlappingInstances
endsnippet

snippet executable "executable"


snippet executable_only "executable_only"
executable     testSimple
  main-is:        testSimple.hs
  if !(flag(BuildTestSimple))
    buildable: False
  hs-source-dirs: test, src
  build-depends:   haskell98
                  , base
                  , HList
                  , HaXml >= 1.19
                  , filepath
                  , mtl
                  , pretty
                  , containers
                  , template-haskell
  extensions: CPP
  include-dirs: include
  if flag(WeakValidation)
    cpp-options: -DWEAK_VALIDATION
    extensions: OverlappingInstances
  else
    extenions: OverlappingInstances
endsnippet

snippet executable "executable"


endsnippet

snippet executable_only "executable_only"



snippet flag
	Flag Build${1}
		Default: False
		Description: wether to build the executable $1
snippet executable "executable"


snippet executable_only "executable_only"
executable     testSimple
  main-is:        testSimple.hs
  if !(flag(BuildTestSimple))
    buildable: False
  hs-source-dirs: test, src
  build-depends:   haskell98
                  , base
                  , HList
                  , HaXml >= 1.19
                  , filepath
                  , mtl
                  , pretty
                  , containers
                  , template-haskell
  extensions: CPP
  include-dirs: include
  if flag(WeakValidation)
    cpp-options: -DWEAK_VALIDATION
    extensions: OverlappingInstances
  else
    extenions: OverlappingInstances
endsnippet

snippet executable "executable"


endsnippet

snippet executable_only "executable_only"


snippet executable "executable"


endsnippet

snippet executable_only "executable_only"


snippet executable "executable"


ndsnippet

endsnippet

snippet executable_only "executable_only"



endsnippet

snippet flag "flag"
Flag Build$1
	Default: False
	Description: wether to build the executable $1
endsnippet

snippet executable "executable"


snippet executable_only "executable_only"
executable     testSimple
  main-is:        testSimple.hs
  if !(flag(BuildTestSimple))
    buildable: False
  hs-source-dirs: test, src
  build-depends:   haskell98
                  , base
                  , HList
                  , HaXml >= 1.19
                  , filepath
                  , mtl
                  , pretty
                  , containers
                  , template-haskell
  extensions: CPP
  include-dirs: include
  if flag(WeakValidation)
    cpp-options: -DWEAK_VALIDATION
    extensions: OverlappingInstances
  else
    extenions: OverlappingInstances
endsnippet

snippet executable "executable"


endsnippet

snippet executable_only "executable_only"


snippet executable "executable"


endsnippet

snippet executable_only "executable_only"


snippet executable "executable"


ndsnippet

endsnippet

snippet executable_only "executable_only"



endsnippet

snippet flag "flag"
Flag Build${1}
	Default: False
	Description: wether to build the executable $1
endsnippet

snippet executable "executable"


endsnippet

snippet executable_only "executable_only"


snippet executable "executable"


ndsnippet

endsnippet

snippet executable_only "executable_only"


endsnippet

snippet executable "executable"


ndsnippet

endsnippet

snippet executable_only "executable_only"


endsnippet

snippet executable "executable"


dsnippet

ndsnippet

endsnippet

snippet executable_only "executable_only"



ndsnippet

endsnippet

snippet flag "flag"


